// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: backofficers.sql

package db

import (
	"context"
	"time"
)

const createBackOfficers = `-- name: CreateBackOfficers :one
INSERT INTO
  "BackOfficers" (
    "email",
    "ssn",
    "hashed_password",
    "name",
    "phone",
    "age",
    "gender" ,
    "date_of_birth",
    "place_of_birth"
  )
VALUES
  ($1, $2, $3, $4, $5, $6, $7, $8, $9)
RETURNING id, email, ssn, hashed_password, name, phone, age, gender, date_of_birth, place_of_birth, created_at, updated_at
`

type CreateBackOfficersParams struct {
	Email          string     `json:"email"`
	Ssn            string     `json:"ssn"`
	HashedPassword string     `json:"hashed_password"`
	Name           string     `json:"name"`
	Phone          string     `json:"phone"`
	Age            int32      `json:"age"`
	Gender         GenderType `json:"gender"`
	DateOfBirth    time.Time  `json:"date_of_birth"`
	PlaceOfBirth   string     `json:"place_of_birth"`
}

func (q *Queries) CreateBackOfficers(ctx context.Context, arg CreateBackOfficersParams) (BackOfficer, error) {
	row := q.db.QueryRowContext(ctx, createBackOfficers,
		arg.Email,
		arg.Ssn,
		arg.HashedPassword,
		arg.Name,
		arg.Phone,
		arg.Age,
		arg.Gender,
		arg.DateOfBirth,
		arg.PlaceOfBirth,
	)
	var i BackOfficer
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Ssn,
		&i.HashedPassword,
		&i.Name,
		&i.Phone,
		&i.Age,
		&i.Gender,
		&i.DateOfBirth,
		&i.PlaceOfBirth,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getBackOfficer = `-- name: GetBackOfficer :one
SELECT id, email, ssn, hashed_password, name, phone, age, gender, date_of_birth, place_of_birth, created_at, updated_at FROM "BackOfficers" 
WHERE email = $1 LIMIT 1
`

func (q *Queries) GetBackOfficer(ctx context.Context, email string) (BackOfficer, error) {
	row := q.db.QueryRowContext(ctx, getBackOfficer, email)
	var i BackOfficer
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Ssn,
		&i.HashedPassword,
		&i.Name,
		&i.Phone,
		&i.Age,
		&i.Gender,
		&i.DateOfBirth,
		&i.PlaceOfBirth,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
